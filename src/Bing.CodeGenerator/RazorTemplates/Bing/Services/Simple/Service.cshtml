@model BuildContext
@{
    var project = Model.Project;
    var buildTask = Model.Build;
    var schema = Model.GetCurrentSchema();
    var table = Model.GetCurrentTable();
    var entity = Model.GetEntityContext().FindEntity(schema, table);
}
using Bing.Application.Services;
using @(Model.GetDataName());
using @(Model.GetDomainName("Repositories"));
using @(Model.GetServiceName("Abstractions"));

namespace @(Model.GetServiceName("Implements"))
{
    /// <summary>
    /// @entity.Description 服务
    /// </summary>
    public class @(entity.ClassName)Service : AppServiceBase, I@(entity.ClassName)Service
    {
        /// <summary>
        /// 工作单元
        /// </summary>
        protected I@(project.GetUnitOfWork()) UnitOfWork { get; set; }
        
        /// <summary>
        /// @(entity.Description)仓储
        /// </summary>
        protected I@(entity.ClassName)Repository @(entity.ClassName)Repository { get; set; }
    
        /// <summary>
        /// 初始化一个<see cref="@(entity.ClassName)Service"/>类型的实例
        /// </summary>
        /// <param name="unitOfWork">工作单元</param>
        /// <param name="@(entity.ClassName.ToCamelCase())Repository">@(entity.Description)仓储</param>
        public @(entity.ClassName)Service( I@(project.GetUnitOfWork()) unitOfWork, I@(entity.ClassName)Repository @(entity.ClassName.ToCamelCase())Repository )
        {
            UnitOfWork = unitOfWork;
            @(entity.ClassName)Repository = @(entity.ClassName.ToCamelCase())Repository;
        }
    }
}